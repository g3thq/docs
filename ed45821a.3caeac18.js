(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{115:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),o=(n(0),n(123)),c=n(127),i=n(128),l={id:"cron-guide",title:"Cron Jobs",sidebar_label:"Cron Jobs"},s={unversionedId:"tutorials/cron-guide",id:"tutorials/cron-guide",isDocsHomePage:!1,title:"Cron Jobs",description:"A Deta Micro can be set to run on a schedule from the deta cli using the deta cron set command.",source:"@site/docs/tutorials/cron.md",slug:"/tutorials/cron-guide",permalink:"/docs/tutorials/cron-guide",editUrl:"https://github.com/g3thq/docs/tree/master/docs/tutorials/cron.md",version:"current",sidebar_label:"Cron Jobs"},b=[],u={rightToc:b};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A Deta Micro can be set to run on a schedule from the ",Object(o.b)("inlineCode",{parentName:"p"},"deta cli")," using the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"../cli/commands#deta-cron-set"}),"deta cron set")," command."),Object(o.b)("p",null,"In this guide we are going to configure a deta micro to run every five minutes."),Object(o.b)("p",null,"The guide assumes you have already signed up for Deta and have the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/cli/install"}),"Deta CLI")," installed."),Object(o.b)(c.a,{groupId:"preferred-language",defaultValue:"js",values:[{label:"JavaScript",value:"js"},{label:"Python",value:"py"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"js",mdxType:"TabItem"},Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a directory ",Object(o.b)("inlineCode",{parentName:"p"},"cron-job")," and change the current directory to it."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ mkdir cron-job && cd cron-job\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In order to set a micro to run on a schedule, the micro's code needs to define a function that will be run on the schedule with the help of our library ",Object(o.b)("inlineCode",{parentName:"p"},"deta"),", which is pre-installed on a micro and can just be imported directly."),Object(o.b)("p",{parentName:"li"},"Create a ",Object(o.b)("inlineCode",{parentName:"p"},"index.js")," file and define the function that should run on the schedule."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-javascript"}),"// import app from 'deta'\nconst { app } = require('deta');\n\n// use app.lib.cron to define the function that runs on the schedule\n// takes an `event` as an argument\napp.lib.cron(event => {\n    console.log(\"running on a schedule\");\n});\n\nmodule.exports = app; \n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a new ",Object(o.b)("inlineCode",{parentName:"p"},"nodejs")," micro with ",Object(o.b)("inlineCode",{parentName:"p"},"deta new"),"."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'$ deta new\nSuccessfully created a new micro\n{\n    "name": "cron-job",\n    "runtime": "nodejs12.x",\n    "endpoint": "https://{micro_name}.deta.dev",\n    "visor": "enabled",\n    "http_auth": "enabled"\n}\n')),Object(o.b)("p",{parentName:"li"},"Even though the output shows a HTTP endpoint, you do not need it for cron. ")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Set the micro to run on a schedule with the ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"../cli/commands#deta-cron-set"}),"deta cron set")," command."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'$ deta cron set "5 minutes"\nScheduling micro...\nSuccessfully set micro to schedule for "5 minutes"\n')),Object(o.b)("p",{parentName:"li"},"We have set the micro to run every five minutes. In order to see if a micro is running on a schedule, you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"deta details")," command. "),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'$ deta details\n{\n    "name": "cron-job",\n    "runtime": "nodejs12.x",\n    "endpoint": "https://{micro_name}.deta.dev",\n    "visor": "enabled",\n    "http_auth": "enabled",\n    "cron": "5 minutes"\n}\n')),Object(o.b)("p",{parentName:"li"},"The details show that the ",Object(o.b)("inlineCode",{parentName:"p"},"cron")," has ben set for ",Object(o.b)("inlineCode",{parentName:"p"},"5 minutes")))),Object(o.b)("ol",{start:7},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In order to see logs of your cron-job, you can use ",Object(o.b)("inlineCode",{parentName:"p"},"Deta Visor"),", which enables you to see real-time logs of a Deta Micro. Open your micro's visor page with ",Object(o.b)("inlineCode",{parentName:"p"},"deta visor open")," from the cli or by navigating to your micro's visor page on the browser."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ deta visor open\nOpening visor in the browser...\n")))),Object(o.b)("p",null,'We have a micro which prints "running on a schedule" every five minutes. You should see the execution logs in your micro\'s visor page every five minutes.')),Object(o.b)(i.a,{value:"py",mdxType:"TabItem"},Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a directory ",Object(o.b)("inlineCode",{parentName:"p"},"cron-job")," and change the current directory to it."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ mkdir cron-job && cd cron-job\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In order to set a micro to run on a schedule, the micro's code needs to define a function that will be run on the schedule with the help of our library ",Object(o.b)("inlineCode",{parentName:"p"},"deta"),", which is pre-installed on a micro and can just be imported directly. "),Object(o.b)("p",{parentName:"li"},"Create a ",Object(o.b)("inlineCode",{parentName:"p"},"main.py")," file and define the function that should run on the schedule."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-python"}),'from deta import app\n\n# use app.lib.cron decorator for the function that runs on the schedule\n# the function takes an `event` as an argument\n@app.lib.cron()\ndef cron_task(event):\n    print("running on a schedule") \n'))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Create a new ",Object(o.b)("inlineCode",{parentName:"p"},"python")," micro with ",Object(o.b)("inlineCode",{parentName:"p"},"deta new"),"."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'$ deta new\nSuccessfully created a new micro\n{\n    "name": "cron-job",\n    "runtime": "python3.7",\n    "endpoint": "https://{micro_name}.deta.dev",\n    "visor": "enabled",\n    "http_auth": "enabled"\n}\n')),Object(o.b)("p",{parentName:"li"},"Even though the output shows a HTTP endpoint, you do not need it for cron. ")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Set the micro to run on a schedule with ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"../cli/commands#deta-cron-set"}),"deta cron set")," command."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'$ deta cron set "5 minutes"\nScheduling micro...\nSuccessfully set micro to schedule for "5 minutes"\n')),Object(o.b)("p",{parentName:"li"},"We have set the micro to run every five minutes. In order to see if a micro is running on a schedule, you can use the ",Object(o.b)("inlineCode",{parentName:"p"},"deta details")," command. "),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'$ deta details\n{\n    "name": "cron-job"\n    "runtime": "python3.7",\n    "endpoint": "https://{micro_name}.deta.dev",\n    "visor": "enabled",\n    "http_auth": "enabled",\n    "cron": "5 minutes"\n}\n')),Object(o.b)("p",{parentName:"li"},"The details show that the ",Object(o.b)("inlineCode",{parentName:"p"},"cron")," has ben seet for ",Object(o.b)("inlineCode",{parentName:"p"},"5 minutes")))),Object(o.b)("ol",{start:7},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"In order to see logs of your cron-job, you can use ",Object(o.b)("inlineCode",{parentName:"p"},"Deta Visor"),", which enables you to see real-time logs of a Deta Micro. Open your micro's visor page with ",Object(o.b)("inlineCode",{parentName:"p"},"deta visor open")," from the cli or by navigating to your micro's visor page on the browser."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ deta visor open\nOpening visor in the browser...\n")))),Object(o.b)("p",null,'We have successfully deployed a micro which prints "running on a schedule" every five minutes. You should see the execution logs in your micro\'s visor page every five minutes.'),Object(o.b)("p",null,"Full documentation on cron is available ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"https://docs.deta.sh/docs/micros/cron"}),"here"),"."))))}p.isMDXComponent=!0},123:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=b(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=b(n),d=a,m=u["".concat(c,".").concat(d)]||u[d]||p[d]||o;return n?r.a.createElement(m,i(i({ref:t},s),{},{components:n})):r.a.createElement(m,i({ref:t},s))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var s=2;s<o;s++)c[s]=n[s];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},124:function(e,t,n){"use strict";function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}t.a=function(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}},125:function(e,t,n){"use strict";var a=n(0),r=n(126);t.a=function(){var e=Object(a.useContext)(r.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},126:function(e,t,n){"use strict";var a=n(0),r=Object(a.createContext)(void 0);t.a=r},127:function(e,t,n){"use strict";var a=n(0),r=n.n(a),o=n(125),c=n(124),i=n(53),l=n.n(i),s=37,b=39;t.a=function(e){var t=e.lazy,n=e.block,i=e.children,u=e.defaultValue,p=e.values,d=e.groupId,m=e.className,h=Object(o.a)(),j=h.tabGroupChoices,O=h.setTabGroupChoices,f=Object(a.useState)(u),v=f[0],g=f[1];if(null!=d){var N=j[d];null!=N&&N!==v&&p.some((function(e){return e.value===N}))&&g(N)}var y=function(e){g(e),null!=d&&O(d,e)},w=[];return r.a.createElement("div",null,r.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(c.a)("tabs",{"tabs--block":n},m)},p.map((function(e){var t=e.value,n=e.label;return r.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":v===t,className:Object(c.a)("tabs__item",l.a.tabItem,{"tabs__item--active":v===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case b:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(w,e.target,e)},onFocus:function(){return y(t)},onClick:function(){y(t)}},n)}))),t?Object(a.cloneElement)(i.filter((function(e){return e.props.value===v}))[0],{className:"margin-vert--md"}):r.a.createElement("div",{className:"margin-vert--md"},i.map((function(e,t){return Object(a.cloneElement)(e,{key:t,hidden:e.props.value!==v})}))))}},128:function(e,t,n){"use strict";var a=n(3),r=n(0),o=n.n(r);t.a=function(e){var t=e.children,n=e.hidden,r=e.className;return o.a.createElement("div",Object(a.a)({role:"tabpanel"},{hidden:n,className:r}),t)}}}]);