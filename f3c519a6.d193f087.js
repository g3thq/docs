(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{116:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),o=(n(0),n(123)),i={id:"details",title:"Pre-set Environment Variables",sidebar_label:"Pre-set Environment Variables"},c={unversionedId:"micros/details",id:"micros/details",isDocsHomePage:!1,title:"Pre-set Environment Variables",description:"What are they?",source:"@site/docs/micros/details.md",slug:"/micros/details",permalink:"/docs/micros/details",editUrl:"https://github.com/g3thq/docs/tree/master/docs/micros/details.md",version:"current",sidebar_label:"Pre-set Environment Variables"},s=[{value:"What are they?",id:"what-are-they",children:[]},{value:"Path",id:"path",children:[]},{value:"Runtime",id:"runtime",children:[]}],l={rightToc:s};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"what-are-they"},"What are they?"),Object(o.b)("p",null,"Pre-set environment variables are essentially just pieces of information about your Micro and project, permanently stored in your Micro's environment. "),Object(o.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-heading"}),Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",Object(r.a)({parentName:"h5"},{className:"admonition-icon"}),Object(o.b)("svg",Object(r.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(o.b)("path",Object(r.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"note")),Object(o.b)("div",Object(r.a)({parentName:"div"},{className:"admonition-content"}),Object(o.b)("p",{parentName:"div"},"These env vars are required for your Micro to work and can't be changed by you. You should also treat them as secrets, so never expose them to your users. "))),Object(o.b)("p",null,"In some cases, pre-set environment variables can be useful in your code. This guide will help you learn more about some of these variables and their use cases. "),Object(o.b)("h3",{id:"path"},"Path"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"DETA_PATH")," is one of the pre-set environment variables that contains an identifying string for your Micro. For example, if your ",Object(o.b)("inlineCode",{parentName:"p"},"DETA_PATH")," variable contained a value of ",Object(o.b)("inlineCode",{parentName:"p"},"sdfgh")," then your Micro is accessible at ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://sdfgh.deta.dev"}),"https://sdfgh.deta.dev"),"."),Object(o.b)("h4",{id:"use-cases"},"Use cases"),Object(o.b)("h5",{id:"absolute-link"},"Absolute link"),Object(o.b)("p",null,"In some cases, your resource may need to respond with an absolute link to some of the content it is hosting, along with the relative resource link. This can be done with the following code:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-py"}),'import os\n# Get and store hostname for later use\npath = os.environ.get(\'DETA_PATH\')\nhostname = ""\nif (path == None):\n   hostname = "localhost"\nelse:\n   hostname = f"{path}.deta.dev"\n\n\n@app.get("/resource_location/{resource_id}")\nasync def get_resource_location(resource_id):\n   return { \n      "rel_path": f"/resource/{resource_id}",\n      "abs_path": f"https://{hostname}/resource/{resource_id}"\n       }\n')),Object(o.b)("h3",{id:"runtime"},"Runtime"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"DETA_RUNTIME")," contains a boolean value that indicates if your script is running on a Micro. When accessing this variable in a Micro, expect to get a ",Object(o.b)("inlineCode",{parentName:"p"},"True")," from it. "),Object(o.b)("h4",{id:"use-cases-1"},"Use cases"),Object(o.b)("h5",{id:"check-if-a-script-is-running-on-micro"},"Check if a script is running on Micro"),Object(o.b)("p",null,"In some cases, you might need to run some code exclusively in local development or in a Micro. For example, if you're running a FastAPI project on your Micro, and you've got an endpoint that dumps very sensitive debug information like so:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-py"}),'@app.get("/debug_info")\nasync def debug_info():\n   return get_debug_info()\n')),Object(o.b)("p",null,"This would be alright for local testing, but would mean that anyone would be able to access this sensitive information."),Object(o.b)("p",null,"A solution to this could be to check the environment variable to see if this is running on Micro or not. "),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-py"}),'import os\n\n@app.get("/debug_info")\nasync def debug_info():\n   if (os.getenv(\'DETA_RUNTIME\', False)):\n      return get_debug_info()\n   raise HTTPException(status_code=403, detail="Forbidden")\n')))}u.isMDXComponent=!0},123:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),u=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=u(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=u(n),d=r,m=b["".concat(i,".").concat(d)]||b[d]||p[d]||o;return n?a.a.createElement(m,c(c({ref:t},l),{},{components:n})):a.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);